# Server Configuration
server.port=8080
server.servlet.context-path=/telco-api  # Base path for your API (can be left as-is for simplicity)

# Logging Configuration
#logging.level.org.springframework=INFO  # Logs Spring-related logs at INFO level
#logging.level.com.yourapp=DEBUG  # Logs your app-specific logs at DEBUG level
#logging.file.name=logs/application.log  # Log file location
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n  # Console log format

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092  # Kafka broker address (you can change the port if needed)
spring.kafka.consumer.group-id=telco-consumer-group  # Kafka consumer group ID
spring.kafka.consumer.auto-offset-reset=earliest  # Reads messages from the earliest offset if no previous offset is found
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer  # Kafka producer key serializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer  # Kafka producer value serializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer  # Kafka consumer key deserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer  # Kafka consumer value deserializer

# Database Configuration (MySQL Example)
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/sys
spring.datasource.username=root  
spring.datasource.password=password  
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver 
spring.datasource.hikari.pool-name=HikariCP
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto=update

# Connection Pool Configuration (Optional for tuning)
spring.datasource.hikari.maximum-pool-size=10 
spring.datasource.hikari.minimum-idle=5  
spring.datasource.hikari.idle-timeout=30000  
spring.datasource.hikari.max-lifetime=600000 

logging.level.org.springframework=DEBUG
logging.level.org.hibernate=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
